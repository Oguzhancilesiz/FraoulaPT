@{
    string fullName = User.FindFirst("FullName")?.Value ?? "Kullanıcı";
    string profilePhoto = User.FindFirst("ProfilePhotoUrl")?.Value ?? "/uploads/user-default.jpg";
    string currentController = ViewContext.RouteData.Values["controller"]?.ToString() ?? "";
    string currentAction = ViewContext.RouteData.Values["action"]?.ToString() ?? "";
    Func<string, bool> isActive = (ctrl) => string.Equals(currentController, ctrl, StringComparison.OrdinalIgnoreCase);
}

<!DOCTYPE html>
<html lang="tr" data-theme="dark">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewBag.Title - FraoulaPT</title>

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">

    <!-- CSS Libraries -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet" />

    <style>
        :root {
            /* Light */
            --bg: #f6f7fb;
            --surface: #ffffff;
            --text: #1f2937;
            --muted: #6b7280;
            --border: #e5e7eb;
            --accent: #7c3aed; /* purple */
            --accent-2: #16a34a; /* green */
            --brand-grad: linear-gradient(90deg, #7c3aed, #16a34a);
        }

        [data-theme="dark"] {
            /* Dark */
            --bg: #0b0d12;
            --surface: #10141d;
            --text: #e5e7eb;
            --muted: #9ca3af;
            --border: #1f2430;
            --accent: #7c3aed;
            --accent-2: #16a34a;
            --brand-grad: linear-gradient(90deg, #7c3aed, #16a34a);
        }

        html, body {
            height: 100%;
        }

        body {
            background: var(--bg);
            color: var(--text);
            font-family: 'Inter', system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, 'Helvetica Neue', Arial, "Apple Color Emoji", "Segoe UI Emoji";
        }

        .navbar-modern {
            background: var(--surface);
            border-bottom: 1px solid var(--border);
        }

        .navbar-brand span.brand {
            background: var(--brand-grad);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            font-weight: 800;
        }

        .nav-link {
            color: var(--muted) !important;
        }

            .nav-link.active, .nav-link:hover {
                color: var(--text) !important;
            }

        .profile-img {
            border: 2px solid var(--accent);
            object-fit: cover;
        }

        main {
            padding-top: 84px;
            padding-bottom: 80px;
        }

        .card {
            background: var(--surface);
            color: var(--text);
            border: 1px solid var(--border);
        }

        .text-muted {
            color: var(--muted) !important;
        }

        /* Mobile bottom nav */
        .mobile-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            z-index: 1030;
            background: var(--surface);
            border-top: 1px solid var(--border);
        }

            .mobile-nav .nav-link {
                color: var(--muted);
            }

                .mobile-nav .nav-link.active {
                    color: var(--accent);
                }

        /* Support floating button */
        #supportToggle {
            position: fixed;
            right: 16px;
            bottom: 96px;
            z-index: 1050;
            background: var(--accent);
            border: none;
            box-shadow: 0 10px 30px rgba(0,0,0,.25);
        }

        #supportBox {
            width: 360px;
            right: 16px;
            bottom: 160px;
            display: none;
            z-index: 1050;
        }

            #supportBox .card-header {
                background: var(--accent);
                color: #fff;
            }

            #supportBox .nav-tabs .nav-link {
                color: var(--muted);
            }

                #supportBox .nav-tabs .nav-link.active {
                    color: var(--text);
                    border-bottom: 2px solid var(--accent-2);
                }

        /* Chat bubbles */
        .chat-message {
            max-width: 80%;
            padding: 10px 14px;
            border-radius: 14px;
            margin-bottom: 8px;
            display: inline-block;
            word-break: break-word;
        }

            .chat-message.mine {
                background: rgba(124,58,237,.2);
                color: var(--text);
                border-bottom-right-radius: 0;
            }

            .chat-message.their {
                background: rgba(22,163,74,.18);
                color: var(--text);
                border-bottom-left-radius: 0;
            }

        .chat-meta {
            font-size: .8rem;
            color: var(--muted);
            margin-top: 4px;
        }

        footer {
            background: var(--surface);
            border-top: 1px solid var(--border);
            color: var(--muted);
        }

        /* Utilities */
        .btn-accent {
            background: var(--accent);
            color: #fff;
            border: none;
        }

            .btn-accent:hover {
                opacity: .9;
            }

        .ring {
            outline: 2px solid transparent;
            transition: outline-color .2s ease;
        }

            .ring:focus-visible {
                outline-color: var(--accent);
            }

        media (max-width: 991.98px) {
            #supportBox

        {
            right: 8px;
            left: 8px;
            width: auto;
            bottom: 140px;
        }

        main {
            padding-bottom: 120px;
        }

        }
    </style>
</head>
<body>

    <!-- Top Navbar -->
    <nav class="navbar navbar-expand-lg navbar-modern fixed-top py-2">
        <div class="container">
            <a class="navbar-brand d-flex align-items-center gap-2" asp-controller="Home" asp-action="Index">
                <img src="~/images/fraoulapt-logo.png" alt="Logo" width="36" height="36" class="rounded" />
                <span class="brand">FraoulaPT</span>
            </a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#topNav" aria-controls="topNav" aria-expanded="false" aria-label="Menüyü Aç">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="topNav">
                <ul class="navbar-nav ms-auto align-items-lg-center">
                    <li class="nav-item">
                        <a class="nav-link @(isActive("Home") ? "active" : "")" asp-controller="Home" asp-action="Index">
                            <i class="bi bi-house-door me-1"></i> Ana Sayfa
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(isActive("Package") ? "active" : "")" asp-controller="Package" asp-action="Index">
                            <i class="bi bi-box2-heart me-1"></i> Paketler
                        </a>
                    </li>
                    <li class="nav-item d-none d-lg-block">
                        <a class="nav-link @(isActive("Dashboard") ? "active" : "")" asp-controller="Dashboard" asp-action="Index">
                            <i class="bi bi-graph-up-arrow me-1"></i> Raporum
                        </a>
                    </li>

                    <li class="nav-item mx-2">
                        <button id="themeToggle" class="btn btn-sm btn-outline-secondary ring" type="button" aria-label="Tema Değiştir">
                            <i class="bi bi-moon-stars" id="themeIcon"></i>
                        </button>
                    </li>

                    @if (User.Identity.IsAuthenticated)
                    {
                        <li class="nav-item dropdown ms-lg-2">
                            <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" data-bs-toggle="dropdown" role="button" aria-expanded="false">
                                <img src="@profilePhoto" alt="@fullName" width="28" height="28" class="rounded-circle profile-img me-2" />
                                <span class="fw-semibold">@fullName</span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end shadow">
                                <li><a class="dropdown-item" asp-controller="Profile" asp-action="Detail"><i class="bi bi-person me-2"></i> Profilim</a></li>
                                <li><a class="dropdown-item" asp-controller="Package" asp-action="MyPackages"><i class="bi bi-box-seam me-2"></i> Paketlerim</a></li>
                                <li><a class="dropdown-item" asp-controller="UserWeeklyForm" asp-action="Index"><i class="bi bi-rulers me-2"></i> Vücut Ölçülerim</a></li>
                                <li><a class="dropdown-item" asp-controller="Workout" asp-action="MyWorkout"><i class="bi bi-list-task me-2"></i> Antrenmanım</a></li>
                                <li><hr class="dropdown-divider" /></li>
                                <li><a class="dropdown-item text-danger" asp-controller="Auth" asp-action="Logout"><i class="bi bi-box-arrow-right me-2"></i> Çıkış</a></li>
                            </ul>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item ms-lg-2"><a class="btn btn-sm btn-accent" asp-controller="Auth" asp-action="Login">Giriş Yap</a></li>
                        <li class="nav-item ms-lg-2"><a class="btn btn-sm btn-outline-secondary" asp-controller="Auth" asp-action="Register">Kayıt Ol</a></li>
                    }
                </ul>
            </div>
        </div>
    </nav>

    <!-- Mobile Bottom Nav -->
    <nav class="navbar mobile-nav d-lg-none">
        <div class="container d-flex justify-content-around py-1">
            <a asp-controller="Home" asp-action="Index" class="nav-link @(isActive("Home")?"active":"")"><i class="bi bi-house-door fs-5"></i></a>
            <a asp-controller="Package" asp-action="Index" class="nav-link @(isActive("Package")?"active":"")"><i class="bi bi-box2-heart fs-5"></i></a>
            <a asp-controller="UserWeeklyForm" asp-action="Index" class="nav-link @(isActive("UserWeeklyForm")?"active":"")"><i class="bi bi-journal-check fs-5"></i></a>
            <a asp-controller="Workout" asp-action="MyWorkout" class="nav-link @(isActive("Workout")?"active":"")"><i class="bi bi-list-task fs-5"></i></a>
            <a asp-controller="Profile" asp-action="Detail" class="nav-link @(isActive("Profile")?"active":"")"><img src="@profilePhoto" class="rounded-circle profile-img" width="22" height="22" /></a>
        </div>
    </nav>

    <!-- Content -->
    <main class="container">
        @RenderBody()
    </main>

    <!-- Footer -->
    <footer class="text-center py-3 mt-4">
        <div>© @DateTime.Now.Year FraoulaPT</div>
        <small class="text-muted">Sporcu Takip ve Online Danışmanlık Platformu</small>
    </footer>

    <!-- Support Button & Box -->
    <button id="supportToggle" class="btn btn-accent rounded-circle p-3" title="Destek">
        <i class="bi bi-chat-dots-fill"></i>
    </button>

    <div id="supportBox" class="card shadow-lg position-fixed border-0 rounded-3">
        <div class="card-header p-2 d-flex justify-content-between align-items-center rounded-top">
            <span class="fw-bold"><i class="bi bi-chat-dots-fill me-1"></i> Destek</span>
            <button type="button" class="btn-close btn-close-white btn-sm" aria-label="Kapat" id="supportClose"></button>
        </div>
        <div class="card-body p-0">
            <ul class="nav nav-tabs border-0" id="supportTabs" role="tablist" style="background-color: transparent;">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active fw-semibold border-0" id="question-tab" data-bs-toggle="tab" data-bs-target="#tab-question" type="button" role="tab">
                        <i class="bi bi-question-circle me-1"></i> Soru Sor
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link fw-semibold border-0" id="chat-tab" data-bs-toggle="tab" data-bs-target="#tab-chat" type="button" role="tab">
                        <i class="bi bi-chat-fill me-1"></i> Canlı Sohbet
                    </button>
                </li>
            </ul>
            <div class="tab-content p-3">
                <div class="tab-pane fade show active" id="tab-question" role="tabpanel">
                    @if (User.Identity.IsAuthenticated)
                    {
                        @await Component.InvokeAsync("SupportBox")
                    }
                    else
                    {
                        <div class="alert alert-warning text-center small mb-0">Devam etmek için önce <strong>giriş yapın</strong>.</div>
                    }
                </div>
                <div class="tab-pane fade" id="tab-chat" role="tabpanel">
                    @if (User.Identity.IsAuthenticated)
                    {
                        @await Component.InvokeAsync("SupportChat")
                    }
                    else
                    {
                        <div class="alert alert-warning text-center small mb-0">Sohbet için önce <strong>giriş yapın</strong>.</div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- JS Libraries -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

    <!-- SignalR (fixed url) -->
    <script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@7.0.5/dist/browser/signalr.min.js"></script>

    <script>
        // Theme toggle with localStorage
        (function() {
            const root = document.documentElement;
            const saved = localStorage.getItem('theme');
            if (saved) root.setAttribute('data-theme', saved);
            const icon = document.getElementById('themeIcon');
            function syncIcon(){ icon?.classList.toggle('bi-brightness-high', root.getAttribute('data-theme')==='light'); icon?.classList.toggle('bi-moon-stars', root.getAttribute('data-theme')!=='light'); }
            syncIcon();
            document.getElementById('themeToggle')?.addEventListener('click', ()=>{
                const next = root.getAttribute('data-theme')==='light' ? 'dark' : 'light';
                root.setAttribute('data-theme', next); localStorage.setItem('theme', next); syncIcon();
            });
        })();

        // Support toggle
        (function(){
            const box = document.getElementById('supportBox');
            const toggle = document.getElementById('supportToggle');
            const closeBtn = document.getElementById('supportClose');
            const esc = (e)=>{ if(e.key==='Escape'){ box.style.display='none'; } };
            toggle?.addEventListener('click', ()=>{ box.style.display = (box.style.display==='block') ? 'none' : 'block'; });
            closeBtn?.addEventListener('click', ()=> box.style.display='none');
            document.addEventListener('keydown', esc);
        })();
    </script>

    <!-- SignalR Chat wiring (guards in place) -->
    <script>
        (function(){
            const connection = new signalR.HubConnectionBuilder().withUrl('/chatHub').build();
            const chatBox = document.getElementById('chatMessages');
            const input = document.getElementById('chatInput');
            const sendBtn = document.getElementById('sendMessageBtn');
            const startBtn = document.getElementById('startChatBtn');
            const coachSel = document.getElementById('chatCoach');
            let selectedCoachId = null;

            if (!connection || !(chatBox||sendBtn||startBtn)) return; // component yoksa çalıştırma

            connection.on('ReceiveMessage', function(userId, message, isMine){
                if(!chatBox) return;
                const msgDiv = document.createElement('div');
                msgDiv.className = 'd-flex ' + (isMine ? 'justify-content-end' : 'justify-content-start');
                let timeText = 'şimdi';
                try { const d = new Date(message.sentAt); if(!isNaN(d)) timeText = d.toLocaleTimeString('tr-TR',{hour:'2-digit',minute:'2-digit'}); } catch {}
                msgDiv.innerHTML = `
                    <div class="chat-message ${isMine ? 'mine' : 'their'}">
                        <div class="fw-bold mb-1">${isMine ? 'Sen' : 'Koç'}</div>
                        <div>${message.messageText}</div>
                        <div class="chat-meta">${timeText}</div>
                    </div>`;
                chatBox.appendChild(msgDiv); chatBox.scrollTop = chatBox.scrollHeight;
            });

            connection.on('QuotaExceeded', function(msg){
                Swal.fire({ icon:'warning', title:'Mesaj Gönderilemedi', text: msg, confirmButtonText:'Tamam', footer:'<a href="/Package/MyPackages">📦 Paketleri Gör</a>' });
            });

            connection.start().catch(err=>console.error(err.toString()));

            sendBtn?.addEventListener('click', async function(){
                if(!input || !selectedCoachId) return; const text = input.value.trim(); if(!text) return;
                try { await connection.invoke('SendMessage', selectedCoachId, text); input.value=''; } catch(e){ console.error(e); }
            });

            startBtn?.addEventListener('click', function(){
                selectedCoachId = coachSel?.value || null; if(!selectedCoachId) return;
                document.getElementById('chatCoachSelection')?.classList.add('d-none');
                document.getElementById('chatBoxArea')?.classList.remove('d-none');
                loadPreviousMessages(selectedCoachId);
            });

            coachSel?.addEventListener('change', function(){
                document.getElementById('startChatBtn').disabled = !this.value;
            });

            function loadPreviousMessages(coachId){
                if(!document.getElementById('chatMessages')) return;
                const box = document.getElementById('chatMessages');
                box.innerHTML = '<div class="text-muted text-center">🔄 Geçmiş mesajlar yükleniyor...</div>';
                fetch(`/Chat/GetHistory?coachId=${coachId}`).then(r=>r.json()).then(msgs=>{
                    box.innerHTML='';
                    msgs.forEach(m=>{
                        const div = document.createElement('div');
                        div.className = 'd-flex ' + (m.isMine ? 'justify-content-end' : 'justify-content-start');
                        div.innerHTML = `
                        <div class="chat-message ${m.isMine ? 'mine':'their'}">
                            <div class="fw-bold mb-1">${m.isMine ? 'Sen' : 'Koç'}</div>
                            <div>${m.messageText}</div>
                            <div class="chat-meta">${new Date(m.sentAt).toLocaleTimeString('tr-TR')}</div>
                        </div>`;
                        box.appendChild(div);
                    });
                    box.scrollTop = box.scrollHeight;
                }).catch(()=>{
                    box.innerHTML = '<div class="text-danger text-center">❌ Mesajlar yüklenemedi.</div>';
                });
            }
        })();
    </script>
    <script>
        function loadQuestionHistory() {
          $('#questionHistory').html('<div class="text-center text-muted">Sorular yükleniyor...</div>');
          $.get('/Support/MyQuestions', function (html) {
            $('#questionHistory').html(html);
          });
        }

        // İlk yüklemede getir
        $(document).ready(loadQuestionHistory);

        // "Soru Sor" sekmesi açıldığında yinele (sekme ID'lerin aynı olduğundan emin ol)
        document.getElementById('question-tab')?.addEventListener('shown.bs.tab', loadQuestionHistory);

        // Delegation: form gönderimi
        $(document).on('submit', '#questionForm', function (e) {
          e.preventDefault();

          const $form = $(this);
          const btn   = $form.find('button[type="submit"]');
          const data  = $form.serialize();
          const token = $form.find('input[name="__RequestVerificationToken"]').val();

          btn.prop('disabled', true).text('Gönderiliyor...');

          $.ajax({
            url: '/Support/AskQuestion',
            method: 'POST',
            data: data,
            headers: { 'RequestVerificationToken': token }, // fazladan güvenlik; serialize ile de gider
            success: function () {
              Swal.fire({ icon: 'success', title: 'Sorunuz gönderildi!', timer: 1500, showConfirmButton: false });
              $form[0].reset();
              loadQuestionHistory();
            },
            error: function (xhr) {
              Swal.fire({ icon: 'error', title: 'Hata', text: xhr.responseText || 'Sorunuz gönderilemedi.' });
            },
            complete: function () {
              btn.prop('disabled', false).text('📤 Soruyu Gönder');
            }
          });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)

    @if (TempData["AlertMessage"] != null)
    {
        <script>
            Swal.fire({
                title: @Html.Raw(Json.Serialize(TempData["AlertTitle"] ?? "")),
                text: @Html.Raw(Json.Serialize(TempData["AlertMessage"])),
                icon: @Html.Raw(Json.Serialize(TempData["AlertType"] ?? "info")),
                confirmButtonText: 'Tamam',
                timer: 3000
            });
        </script>
    }

    <script>
        // Toastify TempData helper
        document.addEventListener('DOMContentLoaded', function(){
            var message = '@Html.Raw(TempData["message"])';
            var type = '@TempData["messageType"]';
            if (message) {
                Toastify({
                    text: message,
                    duration: 4000,
                    gravity: 'top',
                    position: 'right',
                    backgroundColor: type === 'success' ? '#22c55e' : type === 'error' ? '#ef4444' : type === 'warning' ? '#f59e0b' : '#06b6d4',
                    close: true
                }).showToast();
            }
        });
    </script>

    @{
        var alert = Context.Request.Query["alert"].ToString();
    }

    @if (!string.IsNullOrEmpty(alert))
    {
        <script>
            Swal.fire({ icon: 'warning', title: 'Uyarı', text: '@alert', confirmButtonText: 'Tamam' });
        </script>
    }
</body>
</html>