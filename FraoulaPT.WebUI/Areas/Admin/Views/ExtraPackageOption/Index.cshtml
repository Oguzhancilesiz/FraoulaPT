@model List<ExtraPackageOptionListDTO>
@using FraoulaPT.Core.Enums
@using FraoulaPT.DTOs.ExtraPackageOptionDTOs
@{
    ViewData["Title"] = "Ek Paket Seçenekleri";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center flex-wrap mb-3">
        <h2 class="mb-2">🧩 Ek Paket Seçenekleri</h2>
        <a asp-action="Create" class="btn btn-success">
            <i class="bi bi-plus-circle me-1"></i> Yeni Ekle
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">Henüz ek paket seçeneği eklenmemiş.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover align-middle text-center">
                <thead class="table-light">
                    <tr>
                        <th>#</th>
                        <th>Ad</th>
                        <th>Tür</th>
                        <th>Adet</th>
                        <th>Fiyat</th>
                        @* <th>Açıklama</th> *@
                        <th>Durum</th>
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        var item = Model[i];
                        <tr>
                            <td>@(i + 1)</td>
                            <td>@item.Name</td>
                            <td>@item.Type</td>
                            <td>@item.Amount</td>
                            <td>@($"{item.Price:C2}")</td>
                            <td>
                                @if (item.IsActive)
                                {
                                    <span class="badge bg-success">Aktif</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Pasif</span>
                                }
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <button class="btn btn-sm @(item.IsActive ? "btn-danger" : "btn-success") toggle-status-btn"
                                            data-id="@item.Id"
                                            title="Durumu Değiştir">
                                        <i class="bi @(item.IsActive ? "bi-eye-slash" : "bi-eye")"></i>
                                    </button>

                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="Düzenle">
                                        <i class="bi bi-pencil"></i>
                                    </a>

                                    <button class="btn btn-sm btn-outline-danger delete-btn"
                                            data-id="@item.Id"
                                            title="Sil">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // ✅ Durum Değiştir (IsActive true/false)
        document.querySelectorAll('.toggle-status-btn').forEach(btn => {
            btn.addEventListener('click', async () => {
                const id = btn.getAttribute('data-id');

                const result = await Swal.fire({
                    title: 'Durumu değiştirmek istediğinize emin misiniz?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Evet',
                    cancelButtonText: 'İptal'
                });

                if (!result.isConfirmed) return;

                const res = await fetch('/Admin/ExtraPackageOption/ToggleActive', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ Id: id })
                });

                const data = await res.json();
                if (data.success) {
                    Swal.fire('Başarılı', 'Durum güncellendi.', 'success')
                        .then(() => location.reload());
                } else {
                    Swal.fire('Hata', data.message || 'Durum güncellenemedi.', 'error');
                }
            });
        });

        // ❌ Silme (Soft Delete → Status = Deleted)
        document.querySelectorAll('.delete-btn').forEach(btn => {
            btn.addEventListener('click', async () => {
                const id = btn.getAttribute('data-id');
                const result = await Swal.fire({
                    title: 'Silmek istediğinize emin misiniz?',
                    text: 'Bu işlem geri alınamaz.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Evet, sil!',
                    cancelButtonText: 'İptal'
                });

                if (!result.isConfirmed) return;

                const res = await fetch(`/Admin/ExtraPackageOption/Delete/${id}`, {
                    method: 'POST'
                });

                const data = await res.json();
                if (data.success) {
                    Swal.fire('Silindi', data.message || 'Kayıt başarıyla silindi.', 'success')
                        .then(() => location.reload());
                } else {
                    Swal.fire('Hata', data.message || 'Silme işlemi başarısız.', 'error');
                }
            });
        });
    </script>
}
