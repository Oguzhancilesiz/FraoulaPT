@using FraoulaPT.WebUI.Areas.Admin.Models.ViewModels._Shared
@using FraoulaPT.WebUI.Areas.Admin.Models.ViewModels.ExerciseViewModels
@model ExerciseEditVM

@{
    ViewData["Title"] = "Egzersiz Güncelle";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    var header = new PageHeaderVM
            {
                Title = "Egzersiz Güncelle",
                Subtitle = "Var olan egzersizi düzenleyin",
                Breadcrumbs = new(){
            new(){ Text="Dashboard", Url=Url.Action("Index","Dashboard", new{ area="Admin" }) },
            new(){ Text="Egzersizler", Url=Url.Action("Index","Exercise", new{ area="Admin" }) },
            new(){ Text="Düzenle" }
        }
            };
}

@await Html.PartialAsync("AdminPartials/_PageHeader", header)

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-8">
            <div class="card ring shadow-soft">
                <div class="card-body p-3 p-md-4">

                    <form asp-area="Admin" asp-controller="Exercise" asp-action="Edit"
                          method="post" enctype="multipart/form-data" autocomplete="off" id="exerciseEditForm">
                        @Html.AntiForgeryToken()

                        <input type="hidden" asp-for="Exercise.Id" />
                        <input type="hidden" asp-for="ExistingImageUrl" />

                        <!-- Adı -->
                        <div class="mb-3">
                            <label asp-for="Exercise.Name" class="form-label">Adı</label>
                            <div class="position-relative">
                                <input asp-for="Exercise.Name" class="form-control bg-transparent border-secondary text-light" maxlength="80" required />
                                <small class="position-absolute end-0 top-100 mt-1 text-muted">
                                    <span id="nameCount">0</span>/80
                                </small>
                            </div>
                            <span asp-validation-for="Exercise.Name" class="text-danger small"></span>
                        </div>

                        <!-- Kategori -->
                        <div class="mb-3">
                            <label asp-for="Exercise.CategoryId" class="form-label">Kategori</label>
                            <select asp-for="Exercise.CategoryId" class="form-select bg-transparent border-secondary text-light" required>
                                <option value="">Seçiniz</option>
                                @foreach (var cat in Model.Categories)
                                {
                                    <option value="@cat.Id">@cat.Name</option>
                                }
                            </select>
                            <span asp-validation-for="Exercise.CategoryId" class="text-danger small"></span>
                        </div>

                        <!-- Açıklama -->
                        <div class="mb-3">
                            <label asp-for="Exercise.Description" class="form-label">Açıklama</label>
                            <textarea asp-for="Exercise.Description" rows="3" maxlength="500"
                                      class="form-control bg-transparent border-secondary text-light"></textarea>
                            <div class="d-flex justify-content-between">
                                <small class="text-muted">İpucu: Önemli noktaları kısa maddelerle yaz.</small>
                                <small class="text-muted"><span id="descCount">0</span>/500</small>
                            </div>
                            <span asp-validation-for="Exercise.Description" class="text-danger small"></span>
                        </div>

                        <!-- Video URL -->
                        <div class="mb-3">
                            <label asp-for="Exercise.VideoUrl" class="form-label">Video Linki (YouTube, Drive vs.)</label>
                            <input asp-for="Exercise.VideoUrl" class="form-control bg-transparent border-secondary text-light"
                                   placeholder="https://www.youtube.com/watch?v=..." />
                            <span asp-validation-for="Exercise.VideoUrl" class="text-danger small"></span>

                            <!-- Video Önizleme -->
                            <div id="videoPreviewWrap" class="mt-2 d-none">
                                <div class="ratio ratio-16x9 ring">
                                    <iframe id="videoPreview" allowfullscreen loading="lazy"></iframe>
                                </div>
                            </div>
                            <div id="videoLinkWrap" class="mt-2 d-none">
                                <a id="videoDirectLink" href="#" target="_blank" class="btn btn-outline-primary btn-sm">
                                    Videoyu Aç
                                </a>
                            </div>
                        </div>

                        <!-- Görsel (Mevcut + Drag&Drop ile yeni yükleme) -->
                        <div class="mb-3">
                            <label class="form-label">Mevcut Görsel</label><br />
                            @if (!string.IsNullOrEmpty(Model.ExistingImageUrl))
                            {
                                <img id="currentImg" src="@Model.ExistingImageUrl" alt="Mevcut Görsel"
                                     class="rounded ring mb-2" style="max-width:140px;max-height:140px;object-fit:cover;" />
                            }
                            else
                            {
                                <div class="text-muted">Görsel bulunmuyor.</div>
                            }
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Yeni Görsel Yükle (İsteğe bağlı)</label>
                            <div id="dropZone" class="dropzone text-center p-4 rounded-3 border border-secondary">
                                <input type="file" asp-for="ImageFile" accept="image/*" class="d-none" id="imageInput" />
                                <div class="dz-in">
                                    <i class="bi bi-cloud-arrow-up fs-1 d-block mb-2"></i>
                                    <div class="mb-1">Yeni görseli buraya sürükle-bırak ya da</div>
                                    <button type="button" class="btn btn-sm btn-outline-light" id="pickImageBtn">Dosya Seç</button>
                                    <div class="small text-muted mt-2">Yüklemezsen mevcut görsel korunur.</div>
                                </div>
                                <div class="dz-preview d-none mt-3">
                                    <img id="imgPreview" class="rounded ring" style="max-width: 180px; max-height: 180px; object-fit: cover;" />
                                    <div class="mt-2 d-flex gap-2 justify-content-center">
                                        <button type="button" class="btn btn-outline-danger btn-sm" id="removeImageBtn">Kaldır</button>
                                        <button type="button" class="btn btn-outline-secondary btn-sm" id="revertToCurrentBtn">Mevcut Görsele Dön</button>
                                    </div>
                                </div>
                            </div>
                            <span asp-validation-for="ImageFile" class="text-danger small"></span>
                        </div>

                        <!-- Butonlar -->
                        <div class="d-flex flex-wrap justify-content-end gap-2 mt-4">
                            <a asp-area="Admin" asp-controller="Exercise" asp-action="Index" class="btn btn-outline-secondary">Vazgeç</a>
                            <button type="submit" class="btn btn-brand px-4">
                                <i class="bi bi-check-circle me-1"></i> Kaydet
                            </button>
                        </div>

                    </form>

                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .dropzone {
        background: var(--panel-2);
        transition: border-color .2s, background .2s;
    }

        .dropzone.dragover {
            border-color: var(--brand);
            background: rgba(255,136,0,.06);
        }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (function(){
          // ==== Sayaçlar
          const nameInput = document.getElementById("Exercise_Name");
          const descInput = document.getElementById("Exercise_Description");
          const nameCount = document.getElementById("nameCount");
          const descCount = document.getElementById("descCount");
          const updateCounts = ()=>{
            if (nameInput) nameCount.textContent = (nameInput.value ?? "").length;
            if (descInput) descCount.textContent = (descInput.value ?? "").length;
          };
          nameInput?.addEventListener("input", updateCounts);
          descInput?.addEventListener("input", updateCounts);
          updateCounts();

          // ==== Video Önizleme (YouTube veya direkt link)
          const videoInput = document.getElementById("Exercise_VideoUrl");
          const videoWrap  = document.getElementById("videoPreviewWrap");
          const videoIframe= document.getElementById("videoPreview");
          const videoLinkWrap = document.getElementById("videoLinkWrap");
          const videoDirectLink = document.getElementById("videoDirectLink");

          function toYouTubeEmbed(url){
            try{
              if(!url) return null;
              const yt1 = /youtu\.be\/([A-Za-z0-9_\-]+)/i.exec(url);
              if (yt1 && yt1[1]) return "https://www.youtube.com/embed/" + yt1[1];
              const yt2 = /youtube\.com\/.*[?&]v=([A-Za-z0-9_\-]+)/i.exec(url);
              if (yt2 && yt2[1]) return "https://www.youtube.com/embed/" + yt2[1];
              return null;
            }catch{ return null; }
          }
          function refreshVideoPreview(){
            const url = videoInput?.value?.trim();
            if(!url){
              videoWrap.classList.add("d-none");
              videoLinkWrap.classList.add("d-none");
              videoIframe.src = "";
              videoDirectLink.href = "#";
              return;
            }
            const emb = toYouTubeEmbed(url);
            if(emb){
              videoIframe.src = emb;
              videoWrap.classList.remove("d-none");
              videoLinkWrap.classList.add("d-none");
            }else{
              videoIframe.src = "";
              videoWrap.classList.add("d-none");
              videoDirectLink.href = url;
              videoLinkWrap.classList.remove("d-none");
            }
          }
          videoInput?.addEventListener("input", refreshVideoPreview);
          refreshVideoPreview();

          // ==== Görsel Drag&Drop + Önizleme
          const dropZone = document.getElementById("dropZone");
          const imageInput = document.getElementById("imageInput");
          const pickBtn = document.getElementById("pickImageBtn");
          const removeBtn = document.getElementById("removeImageBtn");
          const revertBtn = document.getElementById("revertToCurrentBtn");
          const dzPreview = dropZone.querySelector(".dz-preview");
          const dzIn = dropZone.querySelector(".dz-in");
          const imgPreview = document.getElementById("imgPreview");
          const currentImg = document.getElementById("currentImg");

          function stopDefaults(e){ e.preventDefault(); e.stopPropagation(); }
          ["dragenter","dragover","dragleave","drop"].forEach(ev=>{
            dropZone.addEventListener(ev, stopDefaults, false);
          });
          ["dragenter","dragover"].forEach(()=> dropZone.classList.add("dragover"));
          ["dragleave","drop"].forEach(()=> dropZone.classList.remove("dragover"));

          dropZone.addEventListener("drop", (e)=>{
            const f = e.dataTransfer?.files?.[0];
            if(f){ setImageFile(f); }
          });

          pickBtn?.addEventListener("click", ()=> imageInput?.click());
          imageInput?.addEventListener("change", ()=>{
            const f = imageInput.files?.[0];
            if(f){ setImageFile(f); }
          });

          function setImageFile(file){
            if(!file) return;
            if(!file.type.startsWith("image/")){ alert("Lütfen bir görsel dosyası seçin."); return; }
            if(file.size > 5*1024*1024){ alert("Görsel 5MB'den küçük olmalı."); return; }

            const reader = new FileReader();
            reader.onload = e=>{
              imgPreview.src = e.target.result;
              dzPreview.classList.remove("d-none");
              dzIn.classList.add("d-none");
              // mevcut görseli gri yap (sadece görsel amaçlı)
              currentImg?.classList.add("opacity-50");
            };
            reader.readAsDataURL(file);

            const dt = new DataTransfer();
            dt.items.add(file);
            imageInput.files = dt.files;
          }

          removeBtn?.addEventListener("click", ()=>{
            imageInput.value = "";
            imgPreview.src = "";
            dzPreview.classList.add("d-none");
            dzIn.classList.remove("d-none");
            currentImg?.classList.remove("opacity-50");
          });

          revertBtn?.addEventListener("click", ()=>{
            imageInput.value = "";
            imgPreview.src = "";
            dzPreview.classList.add("d-none");
            dzIn.classList.remove("d-none");
            currentImg?.classList.remove("opacity-50");
          });

        })();
    </script>
}
