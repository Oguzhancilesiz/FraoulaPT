@using FraoulaPT.Core.Enums
@model FraoulaPT.DTOs.WorkoutProgramDTOs.WorkoutProgramDetailDTO

@{
    ViewData["Title"] = "Program Detayı";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    string GetDayName(int dayOfWeek) => dayOfWeek switch
    {
        1 => "Pazartesi",
        2 => "Salı",
        3 => "Çarşamba",
        4 => "Perşembe",
        5 => "Cuma",
        6 => "Cumartesi",
        7 => "Pazar",
        _ => "Bilinmeyen"
    };
}
<!-- Program Bilgisi Kartı -->
<div class="card shadow border-0 mb-4">
    <div class="card-body">
        <div class="row align-items-center">
            <!-- Sol: Başlık ve Koç Notu -->
            <div class="col-md-8">
                <h4 class="text-primary mb-1">
                    <i class="bi bi-person-arms-up"></i> @Model.ProgramName
                </h4>
                <p class="text-muted mb-0">
                    <i class="bi bi-chat-left-dots"></i> <strong>Koç Notu:</strong> @Model.CoachNote
                </p>
            </div>

            <!-- Sağ: Tarihler -->
            <div class="col-md-4 text-md-end mt-3 mt-md-0">
                <span class="d-block text-secondary">
                    📅 <strong>Oluşturulma:</strong> @Model.AssignedDate.ToString("dd.MM.yyyy")
                </span>
                <span class="d-block text-secondary">
                    🔄 <strong>Güncelleme:</strong> @Model.UpdatedDate?.ToString("dd.MM.yyyy HH:mm")
                </span>
            </div>
        </div>
    </div>
</div>

<!--Kullanıcı bilgisi kartı-->
<div class="accordion mb-4 shadow-sm" id="userInfoAccordion">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingUserInfo">
            <button class="accordion-button collapsed bg-white" type="button"
                    data-bs-toggle="collapse" data-bs-target="#collapseUserInfo"
                    aria-expanded="false" aria-controls="collapseUserInfo">

                <div class="d-flex align-items-center w-100">
                    <!-- Profil Foto -->
                    <div class="me-3">
                        @if (!string.IsNullOrWhiteSpace(Model.User.Profile?.ProfilePhotoUrl))
                        {
                            <img src="@Model.User.Profile.ProfilePhotoUrl"
                                 class="rounded-circle shadow-sm"
                                 width="60" height="60"
                                 alt="Profil Foto" />
                        }
                        else
                        {
                            <div class="rounded-circle bg-secondary text-white d-flex justify-content-center align-items-center"
                                 style="width: 60px; height: 60px;">
                                <span class="fs-4">👤</span>
                            </div>
                        }
                    </div>

                    <!-- Temel Bilgiler -->
                    <div>
                        <div class="fw-bold fs-5">@Model.User.FullName (@Model.User.UserName)</div>
                        <div class="text-muted small">
                            @Model.User.Profile?.BirthDate?.ToString("dd.MM.yyyy") doğumlu |
                            @Model.User.Profile?.HeightCm cm / @Model.User.Profile?.WeightKg kg
                        </div>
                        <div class="text-muted small">📧 @Model.User.Email | 📱 @Model.User.PhoneNumber</div>
                    </div>
                </div>
                <span class="badge bg-info text-dark ms-auto">💬 Detaylar için tıkla</span>

            </button>
        </h2>

        <div id="collapseUserInfo" class="accordion-collapse collapse" aria-labelledby="headingUserInfo" data-bs-parent="#userInfoAccordion">
            <div class="accordion-body">
                <!-- Detaylı Bilgiler -->
                <div class="row g-3">
                    <div class="col-md-6">
                        <h6 class="text-primary">👤 Kişisel Bilgiler</h6>
                        <ul class="list-group list-group-flush small">
                            <li class="list-group-item"><strong>Cinsiyet:</strong> @Model.User.Profile?.Gender</li>
                            <li class="list-group-item"><strong>Kan Grubu:</strong> @Model.User.Profile?.BloodType</li>
                            <li class="list-group-item"><strong>Vücut Tipi:</strong> @Model.User.Profile?.BodyType</li>
                            <li class="list-group-item"><strong>Deneyim Seviyesi:</strong> @Model.User.Profile?.ExperienceLevel</li>
                            <li class="list-group-item"><strong>Meslek:</strong> @Model.User.Profile?.Occupation</li>
                            <li class="list-group-item"><strong>Favori Sporlar:</strong> @Model.User.Profile?.FavoriteSports</li>
                            <li class="list-group-item"><strong>Beslenme Tipi:</strong> @Model.User.Profile?.DietType</li>
                            <li class="list-group-item"><strong>Sigara / Alkol:</strong> @Model.User.Profile?.SmokingAlcohol</li>
                        </ul>
                    </div>

                    <div class="col-md-6">
                        <h6 class="text-primary">🏥 Sağlık ve Acil Durum</h6>
                        <ul class="list-group list-group-flush small">
                            <li class="list-group-item"><strong>Adres:</strong> @Model.User.Profile?.Address</li>
                            <li class="list-group-item"><strong>Acil Kişi:</strong> @Model.User.Profile?.EmergencyContactName (@Model.User.Profile?.EmergencyContactPhone)</li>
                            <li class="list-group-item"><strong>Kronik Hastalıklar:</strong> @Model.User.Profile?.ChronicDiseases</li>
                            <li class="list-group-item"><strong>Geçmiş Sakatlıklar:</strong> @Model.User.Profile?.PastInjuries</li>
                            <li class="list-group-item"><strong>Mevcut Ağrı:</strong> @Model.User.Profile?.CurrentPain</li>
                            <li class="list-group-item"><strong>İlaçlar:</strong> @Model.User.Profile?.CurrentMedications</li>
                            <li class="list-group-item"><strong>Alerjiler:</strong> @Model.User.Profile?.Allergies</li>
                            <li class="list-group-item"><strong>Tıbbi Geçmiş:</strong> @Model.User.Profile?.MedicalHistory</li>
                            <li class="list-group-item"><strong>Son Tahliller:</strong> @Model.User.Profile?.LastCheckResults</li>
                            <li class="list-group-item"><strong>Hamilelik Durumu:</strong> @(Model.User.Profile?.PregnancyStatus == true ? "Evet" : "Hayır")</li>
                        </ul>
                    </div>

                    <div class="col-12">
                        <h6 class="text-primary">📝 Notlar</h6>
                        <div class="alert alert-light border text-muted small">
                            @Model.User.Profile?.Notes
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!--Program İşlemleri-->
<div class="row g-4">
    @for (int dayIndex = 1; dayIndex <= 7; dayIndex++)
    {
        var currentDay = Model.Days.FirstOrDefault(d => d.DayOfWeek == dayIndex);
        <div class="col-12">
            <div class="card shadow border-dark">
                <div class="card-body d-flex flex-column flex-md-row align-items-start justify-content-between">
                    <!-- Sol taraf: Gün bilgisi -->
                    <div class="me-4 mb-3 mb-md-0">
                        <h5 class="text-dark mb-1">@GetDayName(dayIndex)</h5>
                        <span class="text-muted small">@(currentDay?.Description ?? "Off Day")</span>
                    </div>

                    <!-- Sağ taraf: Egzersizler -->
                    <div class="flex-grow-1">
                        @if (currentDay != null && currentDay.Exercises.Any())
                        {
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var ex in currentDay.Exercises)
                                {
                                    var isDeleted = ex.Status == Status.Deleted;
                                    <div class="position-relative border rounded p-2 small d-flex align-items-center gap-2 @(isDeleted ? "border-danger bg-light text-muted" : "border-success")" style="min-width: 250px;">

                                        @if (!isDeleted)
                                        {
                                            <button type="button"
                                                    class="btn btn-sm btn-danger btn-delete-exercise position-absolute top-0 end-0 m-1 p-1"
                                                    style="line-height: 1; font-size: 0.75rem;"
                                                    data-id="@ex.Id"
                                                    title="Sil">
                                                ❌
                                            </button>
                                        }

                                        @if (!string.IsNullOrWhiteSpace(ex.ImageUrls))
                                        {
                                            <img src="@ex.ImageUrls" class="img-thumbnail" style="width: 50px; height: 50px; object-fit: cover;" alt="Görsel" />
                                        }

                                        <div>
                                            <div><strong>@ex.ExerciseName</strong></div>
                                            <div>@ex.SetCount x @ex.Repetition | @ex.Weight kg</div>
                                            <div>@ex.Note</div>
                                            @if (!string.IsNullOrWhiteSpace(ex.VideoUrl))
                                            {
                                                <a href="@ex.VideoUrl" target="_blank" class="badge bg-primary text-white">Video</a>
                                            }
                                        </div>
                                    </div>
                                }

                                @if (currentDay != null)
                                {
                                    <button class="btn btn-sm btn-outline-success" data-bs-toggle="modal" data-bs-target="#addExerciseModal" data-day-id="@currentDay.Id" data-day-name="@GetDayName(dayIndex)">
                                        ➕ Hareket Ekle
                                    </button>
                                }
                                else
                                {
                                    <form method="post" asp-action="AddDay" asp-controller="WorkoutProgram" asp-area="Admin">
                                        <input type="hidden" name="WorkoutProgramId" value="@Model.Id" />
                                        <input type="hidden" name="DayOfWeek" value="@dayIndex" />
                                        <button type="submit" class="btn btn-sm btn-outline-primary">➕ Günü Programa Ekle</button>
                                    </form>
                                }
                            </div>
                        }
                        else if (currentDay != null)
                        {
                            <span>
                                Bu güne ait egzersiz yok    
                               
                            </span>
                            <button class="btn btn-sm btn-outline-success" data-bs-toggle="modal" data-bs-target="#addExerciseModal" data-day-id="@currentDay.Id" data-day-name="@GetDayName(dayIndex)">
                                ➕ Hemen Ekle
                            </button>
                        }
                        else
                        {
                            <span>Off Day</span>
                            <form method="post" asp-action="AddDay" asp-controller="WorkoutProgram" asp-area="Admin">
                                <input type="hidden" name="WorkoutProgramId" value="@Model.Id" />
                                <input type="hidden" name="DayOfWeek" value="@dayIndex" />
                                <button type="submit" class="btn btn-sm btn-outline-primary">➕ Günü Programa Ekle</button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Egzersiz Ekle Modal -->
<div class="modal fade" id="addExerciseModal" tabindex="-1" aria-labelledby="addExerciseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="addExerciseForm" class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">➕ Egzersiz Ekle - <span id="exerciseModalDayName"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="workoutDayId" name="WorkoutDayId" />

                <div class="mb-3">
                    <label for="ExerciseId" class="form-label">Egzersiz Seç</label>
                    <select id="ExerciseId" name="ExerciseId" class="form-select" required>
                        <option value="">-- Seçiniz --</option>
                        @foreach (var ex in Model.Exercises)
                        {
                            <option value="@ex.Id">@ex.Name</option>
                        }
                    </select>
                </div>

                <div class="row g-2">
                    <div class="col">
                        <label class="form-label">Set</label>
                        <input type="number" class="form-control" name="SetCount" required />
                    </div>
                    <div class="col">
                        <label class="form-label">Tekrar</label>
                        <input type="number" class="form-control" name="Repetition" required />
                    </div>
                </div>

                <div class="row g-2 mt-2">
                    <div class="col">
                        <label class="form-label">Ağırlık (kg)</label>
                        <input type="number" class="form-control" name="Weight" step="0.1" />
                    </div>
                    <div class="col">
                        <label class="form-label">Dinlenme (sn)</label>
                        <input type="number" class="form-control" name="RestDurationInSeconds" />
                    </div>
                </div>

                <div class="mt-2">
                    <label class="form-label">Koç Notu</label>
                    <textarea class="form-control" name="Note" rows="2"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-success">Kaydet</button>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="updateExerciseModal" tabindex="-1" aria-labelledby="updateExerciseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form id="updateExerciseForm" class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">✏️ Egzersiz Güncelle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" name="Id" id="updateId" />
                <input type="hidden" name="WorkoutDayId" id="updateWorkoutDayId" />

                <div class="mb-3">
                    <label for="updateExerciseId" class="form-label">Egzersiz</label>
                    <select name="ExerciseId" id="updateExerciseId" class="form-select" required>
                        @foreach (var ex in Model.Exercises)
                        {
                            <option value="@ex.Id">@ex.Name</option>
                        }
                    </select>
                </div>

                <div class="row g-2">
                    <div class="col">
                        <label class="form-label">Set</label>
                        <input type="number" class="form-control" name="SetCount" id="updateSetCount" required />
                    </div>
                    <div class="col">
                        <label class="form-label">Tekrar</label>
                        <input type="number" class="form-control" name="Repetition" id="updateRepetition" required />
                    </div>
                </div>

                <div class="row g-2 mt-2">
                    <div class="col">
                        <label class="form-label">Ağırlık</label>
                        <input type="number" class="form-control" name="Weight" id="updateWeight" step="0.1" />
                    </div>
                    <div class="col">
                        <label class="form-label">Dinlenme</label>
                        <input type="number" class="form-control" name="RestDurationInSeconds" id="updateRestDuration" />
                    </div>
                </div>

                <div class="mt-2">
                    <label class="form-label">Not</label>
                    <textarea class="form-control" name="Note" id="updateNote" rows="2"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary">Güncelle</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {

    <script>
        $('#addExerciseModal').on('show.bs.modal', function (event) {
            const button = $(event.relatedTarget);
            const dayId = button.data('day-id');
            const dayName = button.data('day-name');

            $('#workoutDayId').val(dayId);
            $('#exerciseModalDayName').text(dayName);
        });

        $('#addExerciseForm').on('submit', function (e) {
            e.preventDefault();
            const formData = $(this).serialize();

            $.post('/Admin/WorkoutProgram/AddExercise', formData)
                .done(function () {
                    location.reload();
                })
                .fail(function () {
                    Swal.fire("Hata", "Egzersiz eklenemedi!", "error");
                });
        });
    </script>


    <script>
        $(document).ready(function () {

            // 🔁 Güncelle modalı aç
            $('.btn-update-exercise').click(function () {
                const btn = $(this);

                $('#updateId').val(btn.data('id'));
                $('#updateWorkoutDayId').val(btn.data('day-id'));
                $('#updateExerciseId option').each(function () {
                    if ($(this).val() === btn.data('exercise-id').toString()) {
                        $(this).attr('selected', 'selected');
                    } else {
                        $(this).removeAttr('selected');
                    }
                });
                $('#updateSetCount').val(btn.data('set'));
                $('#updateRepetition').val(btn.data('rep'));
                $('#updateWeight').val(btn.data('weight'));
                $('#updateRestDuration').val(btn.data('rest'));
                $('#updateNote').val(btn.data('note'));

                $('#updateExerciseModal').modal('show');
            });

            // 🔁 Güncelle formunu gönder
            $('#updateExerciseForm').submit(function (e) {
                e.preventDefault();
                const formData = $(this).serialize();

                $.post('/Admin/WorkoutProgram/UpdateExercise', formData)
                    .done(function () {
                        location.reload();
                    })
                    .fail(function () {
                        Swal.fire("Hata", "Güncelleme yapılamadı!", "error");
                    });
            });

            // 🗑️ Egzersiz sil (soft delete)
            $(document).on('click', '.btn-delete-exercise', function () {
                const id = $(this).data('id');
                console.log("Tıklanan ID:", id);
                Swal.fire({
                    title: 'Emin misiniz?',
                    text: "Bu egzersiz silinecek (geri alınabilir)",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Evet, sil',
                    cancelButtonText: 'Vazgeç'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.post('/Admin/WorkoutProgram/DeleteExercise', { id: id })
                            .done(function () {
                                location.reload();
                            })
                            .fail(function () {
                                Swal.fire("Hata", "Silinemedi!", "error");
                            });
                    }
                });
            });

        });
    </script>


}
